@{
    ViewData["Title"] = "Home Page";
}

<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>

<script src="Scripts/Dictionary.js"></script>

<div style="display:flex; flex-direction: column;  background-color:darkgray">
    <div style="flex: 1; display:flex; flex-direction: column; background-color: white; border: 2px solid blue; border-radius:10px; margin: 10px; padding: 10px;">
        <div class="form-group" style="flex: 0; display:flex; flex-direction: row;">
            <h4 style="flex: 0; white-space: nowrap;">Dictionary Word Search</h4>
            <label style="flex: 1"></label>
            <label style="flex:0; color: blue; white-space: nowrap; margin-top: 5px;"><span style="font-weight: bold; color: black">Created By: </span> Terry Fedirko</label>
        </div>
        <div class="form-group" style="flex: 0; display:flex; flex-direction: row;">
            <label class="control-label" style="flex: 0 0 0px"></label>
            <input class="form-control" id="inputDictWord" type="text" style="flex: 1 1 99%;" placeholder="Enter Dictionary word to search" list="dsSavedWords" />
            <datalist id="dsSavedWords">

            </datalist>
            <span class="input-group-btn" style="flex: 1 1 100px; flex-direction: row; display: flex;">
                <button class="btn button-default" style="flex: 0 0 50px;" onclick="onStartSearch()"><span class="glyphicon glyphicon-search"></span></button>
                <button class="btn button-default" style="flex: 0 0 50px;" onclick="onClearSearch()"><span class="glyphicon glyphicon-remove-circle"></span></button>
            </span>
        </div>
        <div class="form-group" style="flex: 0; display:flex; flex-direction: row; margin-bottom: 5px;">
            <label class="control-label" style="flex: 0; display:none"></label>
            <input class="form-control" id="outputMessage" type="text" style="flex: 1; background-color:lightgoldenrodyellow" readonly />

        </div>

        <div id="divOutput" style="flex: 1; display:none; flex-direction: column; background-color: white; border: 2px solid blue; border-radius:10px; margin: 10px; padding: 10px;">
        </div>

    </div>


    <script>

                    //const urlDict = "https://api.dictionaryapi.dev/api/v2/entries/en_US/";

                    //function onStartSearch() {
                    //    var tagInput = $('#inputDictWord');
                    //    var input = tagInput.val();;
                    //    tagInput.val('');

                    //    var tagOutput = $('#divOutput');
                    //    tagOutput.empty()

                    //    var outputMsg = $('#outputMessage');
                    //    outputMsg.css("background-color", "lightgoldenrodyellow");

                    //    var urlDictWord = `${urlDict}${input}`

                    //    $.ajax({
                    //        url: urlDictWord,
                    //        type: "GET",
                    //        contextType: "text/plain",
                    //        success: function (dictionary) {
                    //            tagOutput.css("display", "flex");
                    //            outputMsg.val(`Word Located: ${input}`);

                    //            extractData(dictionary, tagOutput);


                    //        },
                    //        error: function (xhr, status, error) {
                    //            tagOutput.css("display", "none");
                    //            outputMsg.val(`Unable to locate word: ${input}`);
                    //            outputMsg.css("background-color", "yellow");
                    //        }
                    //    });


                    //}

                    //function onClearSearch() {
                    //    var tagInput = $('#inputDictWord');
                    //    tagInput.val('')

                    //    var outputMsg = $('#outputMessage');
                    //    outputMsg.val('');
                    //    outputMsg.css("background-color", "lightgoldenrodyellow");
                    //}


                    //function extractData(data, tagOutput) {
                    //    console.log(data);

                    //    var htmlTag = '';

                    //    var defCnt;
                    //    var word;
                    //    var partOfSpeeh;
                    //    var definition;
                    //    var example;
                    //    var synonyms;

                    //    $.each(data, function (index, value) {
                    //        defCnt = index + 1;
                    //        word = value.word;

                    //        partOfSpeeh = '';
                    //        $.each(value.meanings, function (index, value) {

                    //            partOfSpeech = value.partOfSpeech;
                    //            htmlTag = `
                    //                <div style="flex: 1; display: flex; flex-direction: column; border: 1px solid black; border-radius: 6px; margin-bottom: 10px;">
                    //                    <div style="flex: 1; display: flex; flex-direction: row; background-color: lightgray; color: blue; border-radius: 6px 6px 0 0; border-bottom: 1px solid black; padding: 5px; white-space: nowrap;">
                    //                        <label style="flex: 0; margin-right: 20px; font-weight: bold">Definition #${defCnt}</label>
                    //                        <label style="flex: 0; margin-right: 5px; font-weight: bold; color: black;"> Word: </label>
                    //                        <label style="flex: 0; margin-right: 20px; font-weight: normal">${word}</label>
                    //                        <label style="flex: 1"><!-- filler --></label>
                    //                    </div>`;

                    //            htmlTag += `
                    //                <div style="flex: 1; display: flex; flex-direction: row; white-space: nowrap; padding: 10px;">
                    //                    <label style="flex: 0; font-weight:bold; margin-right: 5px;">Part of Speech:</label>
                    //                    <label style="flex: 0; font-weight:normal; color: blue;"><i>${partOfSpeech}</i></label>
                    //                    <label style="flex: 1"><!-- filler --></label>
                    //                </div>`;

                    //            htmlTag += `
                    //                    <div style="flex: 1; display: flex; flex-direction: row; margin:10px 10px 0 10px;">
                    //                        <label style="flex: 0 0 150px; margin-bottom: 0;"><!-- filler --></label>
                    //                        <label style="flex: 1; margin-bottom: 0; padding: 5px; font-weight: bold; background-color: lightgray; border-top: 1px solid black; border-left: 1px solid black; border-radius: 5px 0 0 0;">Definitions</label>
                    //                        <label style="flex: 1; margin-bottom: 0; padding: 5px; font-weight: bold; background-color: lightgray; border-top: 1px solid black; border-left: 1px solid black;">Examples</label>
                    //                        <label style="flex: 1; margin-bottom: 0; padding: 5px; font-weight: bold; background-color: lightgray; border-top: 1px solid black; border-left: 1px solid black; border-right: 1px solid black;  border-radius: 0 5px 0 0;">Synonyms</label>
                    //                    </div>`;



                    //            definition = '';
                    //            $.each(value.definitions, function (index, value) {
                    //                definition = value.definition;
                    //                example = value.example;
                    //                if (example == null || example == 'undefined' || example.trim().length == 0) {
                    //                    example = '<span style="color: blue;"><i>(example not available)</i></span>';
                    //                }

                    //                synonyms = '';
                    //                $.each(value.synonyms, function (index, value) {
                    //                    synonyms += `${value}, `;
                    //                });

                    //                if (synonyms != null || synonyms != 'undefined' || synonyms.trim().length > 1) {
                    //                    synonyms = synonyms.slice(0, -2);
                    //                }

                    //                if (synonyms == null || synonyms == 'undefined' || synonyms.trim().length == 0) {
                    //                    synonyms = '<span style="color: blue;"><i>(synonyms not available)</i></span>';
                    //                }

                    //                htmlTag += `
                    //                    <div style = "flex: 1; display: flex; flex-direction: row; margin: 0 10px 0 10px;" >
                    //                        <label style="flex: 0 0 150px; margin-bottom: 0;"><!-- filler --></label>
                    //                        <label style="flex: 1; margin-bottom: 0; padding: 5px 5px 0 5px; font-weight: normal; border-top: 1px solid black; border-left: 1px solid black;">${definition}</label>
                    //                        <label style="flex: 1; margin-bottom: 0; padding: 5px 5px 0 5px; font-weight: normal; border-top: 1px solid black; border-left: 1px solid black;">${example}</label>
                    //                        <label style="flex: 1; margin-bottom: 0; padding: 5px 5px 0 5px; font-weight: normal; border-top: 1px solid black; border-left: 1px solid black; border-right: 1px solid black;">${synonyms}</label>
                    //                   </div>`;


                    //            });
                    //            htmlTag += `
                    //                    <div style = "flex: 1; display: flex; flex-direction: row; margin: 0 10px 10px 10px;" >
                    //                        <label style="flex: 0 0 150px;"><!-- filler --></label>
                    //                        <label style="flex: 1; font-weight: normal; border-bottom: 1px solid black;"></label>
                    //                        <label style="flex: 1; font-weight: normal; border-bottom: 1px solid black;"></label>
                    //                        <label style="flex: 1; font-weight: normal; border-bottom: 1px solid black;"></label>
                    //                   </div>`;

                    //            htmlTag += `</div>`;
                    //        });

                    //        htmlTag += `</div>`;

                    //        tagOutput.append(htmlTag);
                    //    });



                    //}


    </script>
